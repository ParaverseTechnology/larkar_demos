//
// Created by fcx@pingxingyung.com on 2022/3/23.
// Copyright (c) 2022 www.pingxingyun.com All rights reserved.
//

#ifndef LARKXR_ARENGINE_BACKGROUND_RENDER_H
#define LARKXR_ARENGINE_BACKGROUND_RENDER_H

#include <cstdlib>

#include <GLES2/gl2.h>
#include <GLES2/gl2ext.h>
#include <huawei_arengine_interface.h>

class ArengineBackgroundRender {
public:
    ArengineBackgroundRender() = default;
    ~ArengineBackgroundRender() = default;


    // Initialize the OpenGL status. This method must be called in the OpenGL thread, and other methods must be called before the methods below.
    void InitializeBackGroundGlContent();

    // Draw a background image. This method must be called to capture the event of geometric changes.
    // @param session This API is used to query the sessions in the background drawing.
    // @param fram Information about each frame during background drawing.
    void Draw(const HwArSession *session, const HwArFrame *frame);

    // Obtain the texture ID.
    // @return Name of the texture generated by the GL_TEXTURE_EXTERNAL_OES target.
    GLuint GetTextureId() const;
private:
    const static int VERTICES_NUM = 4; // Number of vertices.

    GLuint shaderProgram = 0;
    GLuint textureId = 0;
    GLuint attributeVertices = 0;
    GLuint attributeUvs = 0;
    GLuint uniformTexture = 0;

    // In OpenGLES, the texture coordinate dimension is 2.
    float transformedUvs[VERTICES_NUM * 2] = {};
    bool uvsInitialized = false;
};


#endif //LARKXR_ARENGINE_BACKGROUND_RENDER_H
