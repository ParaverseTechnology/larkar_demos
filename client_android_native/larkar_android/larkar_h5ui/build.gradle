plugins {
    id 'com.android.application'
}

apply from:"${project.rootDir}/config.gradle"

android {
    compileSdk COMPLITE_VERSION

    defaultConfig {
        applicationId "com.pxy.larkar_h5ui"
        minSdk MIN_SDK_VERSION
        targetSdk TARGET_SDK_VERSION
        versionCode 1
        versionName "3.2.2.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs '../lib_larkar/libs', "${project.rootDir}/libs"
        }
    }

    packagingOptions {
        jniLibs {
            pickFirsts += [
                    'lib/armeabi-v7a/libarcore_sdk_c.so',
                    'lib/arm64-v8a/libarcore_sdk_c.so',
                    'lib/armeabi-v7a/libc++_shared.so',
                    'lib/arm64-v8a/libc++_shared.so',
                    'lib/armeabi-v7a/libhuawei_arengine_ndk.so',
                    'lib/arm64-v8a/libhuawei_arengine_ndk.so',
                    'lib/armeabi-v7a/liblark_xr.so',
                    'lib/arm64-v8a/liblark_xr.so',
                    'lib/armeabi-v7a/liblark_common.so',
                    'lib/arm64-v8a/liblark_common.so',
                    'lib/armeabi-v7a/libCloudXRClient.so',
                    'lib/arm64-v8a/libCloudXRClient.so',
                    'lib/arm64-v8a/libGfxPluginCardboard.so',
                    'lib/armeabi-v7a/libGfxPluginCardboard.so',
                    'lib/armeabi-v7a/liboboe.so',
                    'lib/arm64-v8a/liboboe.so',
            ]
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def build = 1
            def abi = "all";
            if (output.filters[0] != null) {
                abi = output.filters[0].identifier
            }
            outputFileName = "lark-ar-native-" +
                    defaultConfig.versionName + "-build-" +
                    build + "-" + abi + ".apk"
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation project(":lib_larkar")
    implementation project(":lib_larkvr")

    implementation 'com.huawei.hms:arenginesdk:3.7.0.3'
    implementation 'com.google.ar:core:1.30.0'
    implementation(name: 'larkxr-kit-3.2.2.0-build-1-pxyinner', ext: 'aar')

    implementation(name: 'oboe-1.6.1', ext: 'aar')

    // WARNING
    // enable cloudxr support must put your CloudXR.aar under larkar_android/libs dir
    if (BUILD_WITH_CLOUDXR_SUPPORT) {
        implementation(name: 'CloudXR', ext: 'aar')
    }
}